import React, { useState } from 'react';import axios from 'axios';const API = import.meta.env.VITE_API_URL || 'http://localhost:4000';export default function Admin(){ const [username,setUsername]=useState(''); const [password,setPassword]=useState(''); const [token,setToken]=useState(''); const [users,setUsers]=useState([]); const [msg,setMsg]=useState(''); async function login(){ try{ const res=await axios.post(`${API}/api/admin/login`, { username, password }); setToken(res.data.token); setMsg('Conectado como admin'); }catch(e){ setMsg(e?.response?.data?.error || 'Error'); }} async function fetchUsers(){ try{ const res=await axios.get(`${API}/api/admin/users`, { headers: { Authorization: `Bearer ${token}` } }); setUsers(res.data.users); }catch(e){ setMsg(e?.response?.data?.error || 'Error'); }} async function approve(id){ try{ const res=await axios.post(`${API}/api/admin/users/${id}/approve`, {}, { headers:{ Authorization:`Bearer ${token}` } }); setMsg('Usuario aprobado'); fetchUsers(); }catch(e){ setMsg(e?.response?.data?.error || 'Error'); }} async function setBalance(id,balance){ try{ const res=await axios.post(`${API}/api/admin/users/${id}/balance`, { balance }, { headers:{ Authorization:`Bearer ${token}` } }); setMsg('Saldo actualizado'); fetchUsers(); }catch(e){ setMsg(e?.response?.data?.error || 'Error'); }} return (<div style={{padding:20,maxWidth:1000,margin:'0 auto'}}><h2>Admin Panel</h2><div style={{display:'flex',gap:10,alignItems:'center'}}><input placeholder='admin user' value={username} onChange={e=>setUsername(e.target.value)} /> <input placeholder='pass' type='password' value={password} onChange={e=>setPassword(e.target.value)} /> <button onClick={login}>Login</button> <button onClick={fetchUsers}>Cargar usuarios</button></div><div style={{marginTop:10}}>{msg}</div><div style={{marginTop:20}}>{users.length===0? <div>No hay usuarios cargados</div> : (<table style={{width:'100%',borderCollapse:'collapse'}}><thead><tr><th>ID</th><th>Usuario</th><th>Saldo</th><th>Aprobado</th><th>Acciones</th></tr></thead><tbody>{users.map(u=> (<tr key={u.id} style={{borderTop:'1px solid #ddd'}}><td>{u.id}</td><td>{u.username}</td><td><input defaultValue={u.balance} onBlur={(e)=>setBalance(u.id, Number(e.target.value))} style={{width:100}} /></td><td>{u.approved? 'SÃ­':'No'}</td><td><button onClick={()=>approve(u.id)}>Aprobar</button></td></tr>))}</tbody></table>)}</div></div>); }