import React, { useState, useEffect } from 'react';import axios from 'axios';const API = import.meta.env.VITE_API_URL || 'http://localhost:4000';export default function App(){ const [token,setToken]=useState(localStorage.getItem('ab_token')||''); const [user,setUser]=useState(null); const [username,setUsername]=useState(''); const [password,setPassword]=useState(''); const [betAmount,setBetAmount]=useState(100); const [betChoice,setBetChoice]=useState('red'); const [message,setMessage]=useState(''); const [lastSpin,setLastSpin]=useState(null);
 useEffect(()=>{ if(token){ localStorage.setItem('ab_token', token); fetchMe(); } else { localStorage.removeItem('ab_token'); setUser(null);} }, [token]);
 async function fetchMe(){ try{ const res = await axios.get(`${API}/api/me`, { headers: { Authorization: `Bearer ${token}` }}); setUser(res.data.user);}catch(e){ console.error(e); setToken(''); }}
 async function handleRegister(){ setMessage(''); try{ const res = await axios.post(`${API}/api/register`, { username, password }); setMessage(res.data.message || 'Registrado.'); setUsername(''); setPassword(''); }catch(e){ setMessage(e?.response?.data?.error || 'Error'); }}
 async function handleLogin(){ setMessage(''); try{ const res = await axios.post(`${API}/api/login`, { username, password }); setToken(res.data.token); setMessage('Conectado'); setUsername(''); setPassword(''); }catch(e){ setMessage(e?.response?.data?.error || 'Error'); }}
 async function handleLogout(){ setToken(''); setMessage('Desconectado'); }
 async function handleSpin(){ if(!user) return setMessage('Inicia sesión'); const bet = Number(betAmount); if(!bet || bet<=0) return setMessage('Apuesta inválida'); setMessage('Girando...'); try{ const res = await axios.post(`${API}/api/spin`, { bet, choice: betChoice }, { headers: { Authorization: `Bearer ${token}` } }); setLastSpin(res.data.result); setUser(u=>({...u, balance: res.data.balance})); setMessage(`Número ${res.data.result.number} (${res.data.result.color.toUpperCase()}) - ${res.data.result.won ? 'GANASTE' : 'PERDISTE'}`); }catch(e){ setMessage(e?.response?.data?.error || 'Error'); }}
 return (<div style={{fontFamily:'system-ui,Arial',padding:20,maxWidth:900,margin:'0 auto'}}><header style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:20}}><h1>ArgentinaBoom - Demo</h1><div>{user ? <div><strong>{user.username}</strong><div>Saldo: ${user.balance.toFixed(2)}</div><div>{user.approved? 'Cuenta aprobada':'Pendiente aprobación'}</div></div> : <em>Invitado</em>}</div></header><section style={{display:'flex',gap:20,flexWrap:'wrap'}}><div style={{flex:'1 1 260px',border:'1px solid #ddd',padding:16,borderRadius:8}}><h3>Cuenta</h3>{!user? (<><input placeholder="usuario" value={username} onChange={e=>setUsername(e.target.value)} style={{width:'100%',padding:8,marginBottom:8}} /><input placeholder="contraseña" type="password" value={password} onChange={e=>setPassword(e.target.value)} style={{width:'100%',padding:8,marginBottom:8}} /><div style={{display:'flex',gap:8}}><button onClick={handleRegister} style={{flex:1}}>Registrar</button><button onClick={handleLogin} style={{flex:1}}>Entrar</button></div></>) : (<><div><strong>{user.username}</strong></div><div>Saldo: ${user.balance.toFixed(2)}</div><div style={{marginTop:8}}><button disabled style={{marginRight:8}}>Añadir $1000 (admin)</button><button onClick={handleLogout}>Cerrar sesión</button></div></>)}</div><div style={{flex:'2 1 520px',border:'1px solid #ddd',padding:16,borderRadius:8}}><h3>Ruleta</h3><div style={{display:'flex',gap:8,flexWrap:'wrap',alignItems:'center'}}><div><label>Apuesta</label><br /><input type="number" value={betAmount} onChange={e=>setBetAmount(e.target.value)} style={{padding:8,width:120}} /></div><div><label>Elegir</label><br /><select value={betChoice} onChange={e=>setBetChoice(e.target.value)} style={{padding:8}}><option value="red">Rojo</option><option value="black">Negro</option></select></div><div><button onClick={handleSpin} style={{padding:'8px 16px'}}>Girar</button></div></div><div style={{marginTop:12,background:'#f9f9f9',padding:12,borderRadius:6}}><div><strong>Último resultado</strong></div>{lastSpin ? (<div style={{marginTop:8}}><div style={{fontSize:28,fontWeight:700}}>{lastSpin.number}</div><div>{lastSpin.color.toUpperCase()}</div></div>) : <div style={{marginTop:8,opacity:0.7}}>Aún no hay giros</div>}</div><div style={{marginTop:12,background:'#fff8e6',padding:10,borderRadius:6}}><strong>Mensajes:</strong><div style={{marginTop:8}}>{message || 'Sin actividad'}</div></div></div></section><footer style={{marginTop:20,opacity:0.8,fontSize:13}}>Demo fullstack — Créditos ficticios. No usar para apuestas con dinero real.</footer></div>); }